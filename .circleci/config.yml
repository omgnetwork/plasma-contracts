# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

executors:
  truffle_executor:
    docker:
      - image: circleci/node:10.20
  python_executor:
    docker:
      - image: circleci/python:3.7.7

commands:
  setup_truffle_env:
    steps:
      - checkout
      - run:
          name: Set up environment
          command: echo 'export PATH="$(npm bin):$PATH"' >> $BASH_ENV
      - restore_cache:
          keys:
            - dependencies-v1-{{ checksum "~/repo/plasma_framework/package-lock.json" }}
      - run:
          name: Install dependencies
          working_directory: ~/repo/plasma_framework
          command: |
            npm install
            find node_modules -name .git | xargs rm -fr  # workaround for a problem with git dependencies
      - save_cache:
          key: dependencies-v1-{{ checksum "~/repo/plasma_framework/package-lock.json" }}
          paths:
            - ~/repo/plasma_framework/node_modules

  setup_python_env:
    steps:
      - checkout
      - run:
          name: Change dependencies directories ownership
          command: |
            sudo chown -R circleci:circleci /usr/local/bin /usr/local/lib
      - restore_cache:
          keys:
            - dependencies-v1-{{ checksum "~/repo/plasma_framework/python_tests/requirements.txt" }}
      - run:
          name: Prepare environment
          command: |
            sudo apt update && sudo apt install nodejs npm
            sudo npm install -g n && sudo n stable
            sudo npm install -g ganache-cli
            python3 -m venv ~/venv
      - run:
          name: Install dependencies
          working_directory: ~/repo/plasma_framework/python_tests
          command: |
            . ~/venv/bin/activate
            make init dev
            python -m solcx.install v0.5.11
      - save_cache:
          key: dependencies-v1-{{ checksum "~/repo/plasma_framework/python_tests/requirements.txt" }}
          paths:
            - ~/venv
            - /usr/local/bin
            - /usr/local/lib/node_modules

jobs:
  Truffle tests:
    executor: truffle_executor
    working_directory: ~/repo
    steps:
      - setup_truffle_env
      - run:
          name: truffle version
          command: npx truffle version
          working_directory: ~/repo/plasma_framework
      - run:
          name: Run tests
          command: npm run test
          working_directory: ~/repo/plasma_framework
          environment:
            CI: true
            MOCHA_REPORTER: eth-gas-reporter
      - run:
          name: Show gas report
          command: |
            # Somehow the file output format is best read in shell
            cat ~/repo/plasma_framework/gasReport.rst
      - run:
          name: Codechecks for gas usage
          command: |
            # Don't submit gas report for forks or private mirror
            [[ -z "${CC_SECRET}" ]] || npx codechecks
          working_directory: ~/repo/plasma_framework
      - store_artifacts:
          path: ~/repo/plasma_framework/gasReporterOutput.json
      - store_artifacts:
          path: ~/repo/plasma_framework/gasReport.rst

  Solidity coverage:
    executor: truffle_executor
    working_directory: ~/repo
    steps:
      - setup_truffle_env
      - run:
          name: Run solidity coverage
          command: |
            # Don't submit coverage report for forks, but let the build succeed
            if [[ -z "$COVERALLS_REPO_TOKEN" ]]; then
              npm run coverage
            else
              npm run coverage && cat coverage/lcov.info | coveralls
            fi
          working_directory: ~/repo/plasma_framework
      - store_artifacts:
          path: ~/repo/plasma_framework/coverage
      - store_artifacts:
          path: ~/repo/plasma_framework/coverage.json

  Javascript linter:
    executor: truffle_executor
    working_directory: ~/repo
    steps:
      - setup_truffle_env
      - run:
          name: Run javascript linter
          command: eslint .
          working_directory: ~/repo/plasma_framework

  Solidity linter:
    executor: truffle_executor
    working_directory: ~/repo
    steps:
      - setup_truffle_env
      - run:
          name: Run solidity linter
          command: npm run linter-sol
          working_directory: ~/repo/plasma_framework

  Python tests:
    executor: python_executor
    working_directory: ~/repo
    steps:
      - setup_python_env
      - run:
          name: Run tests
          working_directory: ~/repo/plasma_framework/python_tests
          command: |
            . ~/venv/bin/activate
            make test

  Python linter:
    executor: python_executor
    working_directory: ~/repo
    steps:
      - setup_python_env
      - run:
          name: Run linter
          working_directory: ~/repo/plasma_framework/python_tests
          command: |
            . ~/venv/bin/activate
            make lint

  Python long running tests:
    executor: python_executor
    working_directory: ~/repo
    steps:
      - setup_python_env
      - run:
          name: Run slow tests
          working_directory: ~/repo/plasma_framework/python_tests
          no_output_timeout: 5h # Circl CI limits to 5hr max: https://discuss.circleci.com/t/job-times-out-after-5-hours/32220/3
          command: |
            . ~/venv/bin/activate
            make runslow

  Deploy to Rinkeby:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: "Switch to Python v3.7"
          command: |
            pyenv versions
            pyenv global 3.7.0
      - run:
          name: build docker
          command: |
            docker build -t omisego/plasma-contracts .
      - run:
          name: deploy contract to Rinkeby
          no_output_timeout: 1h
          command: |
            docker run --rm \
            -e DEPLOYER_PRIVATEKEY=${FAUCET_PRIV_KEY} \
            -e MAINTAINER_PRIVATEKEY=${FAUCET_PRIV_KEY} \
            -e AUTHORITY_PRIVATEKEY=${FAUCET_PRIV_KEY} \
            -e REMOTE_URL="https://rinkeby.infura.io/v3/${INFURA_API_TOKEN}" \
            omisego/plasma-contracts \
            npx truffle migrate --reset \
            --network remote
      - run:
          name: check faucet balance
          command: |
            python .circleci/scripts/check_faucet_balance_and_warn.py

workflows:
  version: 2
  Run python tests:
    jobs:
      - Python tests
      - Python linter

  Run truffle tests:
    jobs:
      - Truffle tests
      - Solidity coverage
      - Javascript linter
      - Solidity linter

  Run python slow tests:
    jobs:
      - Python long running tests
    triggers:
      - schedule:
          cron: "0 0 * * 1" # run job every monday at midnight
          filters:
            branches:
              only:
                - master

  Deployment checks:
    jobs:
      - Deploy to Rinkeby:
          filters:
            branches:
              only:
                - master
